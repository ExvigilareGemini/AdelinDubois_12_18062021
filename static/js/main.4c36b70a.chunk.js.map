{"version":3,"sources":["img/fullLogo.svg","components/navbar/HorizontalNavbar.js","img/verticalNavbar/zenicon.svg","img/verticalNavbar/swimicon.svg","img/verticalNavbar/bikeicon.svg","img/verticalNavbar/weighticon.svg","components/navbar/VerticalNavbar.js","components/navbar/Nav.js","components/dashboard/Title.js","components/dashboard/cards/Card.js","components/dashboard/cards/Cards.js","img/cards/calories-icon.svg","img/cards/protein-icon.svg","img/cards/carbs-icon.svg","img/cards/fat-icon.svg","callservice.js","components/dashboard/chart/Barchart.js","components/dashboard/chart/Linechart.js","components/dashboard/chart/Radarchart.js","components/dashboard/chart/RadialBarchart.js","components/dashboard/ErrorMessage.js","components/dashboard/Dashboard.js","App.js","index.js"],"names":["HorizontalNavbar","className","src","logo","alt","VerticalNavbar","zenicon","swimicon","bikeicon","weighticon","Nav","Title","props","userName","Card","icon","category","value","unit","cardsIconsArray","unitsArray","categoriesArray","Cards","Object","values","keyData","map","index","proptype","PropTypes","object","getUserDatas","userId","a","errorValue","Axios","get","catch","err","datasToReturn","data","userInfos","todayScore","score","getResponse","error","getUserActivity","console","log","sessions","getUserAverageSessions","getUserPerformance","kind","arrayToReturn","forEach","el","firstLetterUpperKind","charAt","toUpperCase","slice","objectToPush","defaults","baseURL","CustomToolTip","active","payload","length","Barchart","state","this","id","userDatas","setState","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","barGap","CartesianGrid","strokeDasharray","vertical","XAxis","dataKey","tickLine","dy","stroke","YAxis","orientation","dx","axisLine","tickCount","Tooltip","content","Legend","verticalAlign","align","iconType","iconSize","Bar","name","fill","barSize","radius","React","Component","XAxisValue","CustomTooltip","Linechart","day","LineChart","cursor","strokeWidth","padding","tickMargin","Line","type","dot","activeDot","r","propTypes","number","Radarchart","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","fontSize","PolarRadiusAxis","angle","domain","Radar","fillOpacity","RadialBarchart","dataPercentage","RadialBarChart","innerRadius","startAngle","endAngle","tick","background","LabelList","RadialBar","cornerRadius","ErrorMessage","Dashboard","match","params","firstName","undefined","App","path","exact","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c36b70a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fullLogo.01c4ed70.svg\";","import React from \"react\";\r\nimport logo from \"../../img/fullLogo.svg\";\r\n\r\n/** Functional component of the navigation horizontal navbar\r\n * \r\n * @returns JSX of the horizontal navbar \"Header\"\r\n */\r\nfunction HorizontalNavbar() {\r\n  return (\r\n    <nav className=\"horizontalNavbar\">\r\n      <img src={logo} alt=\"Logo\" className=\"horizontalNavbar_logo\"></img>\r\n      <p className=\"horizontalNavbar_link\">Acceuil</p>\r\n      <p className=\"horizontalNavbar_link\">Profil</p>\r\n      <p className=\"horizontalNavbar_link\">Réglages</p>\r\n      <p className=\"horizontalNavbar_link\">Communauté</p>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default HorizontalNavbar;\r\n","export default __webpack_public_path__ + \"static/media/zenicon.e6da2f73.svg\";","export default __webpack_public_path__ + \"static/media/swimicon.c135dfed.svg\";","export default __webpack_public_path__ + \"static/media/bikeicon.22f466fe.svg\";","export default __webpack_public_path__ + \"static/media/weighticon.c9f62cf1.svg\";","import React from \"react\";\r\nimport zenicon from \"../../img/verticalNavbar/zenicon.svg\";\r\nimport swimicon from \"../../img/verticalNavbar/swimicon.svg\";\r\nimport bikeicon from \"../../img/verticalNavbar/bikeicon.svg\";\r\nimport weighticon from \"../../img/verticalNavbar/weighticon.svg\";\r\n\r\n/** Functional component of the navigation vertical navbar, copyright include\r\n *\r\n * @returns JSX of the vertical navbar\r\n */\r\nfunction VerticalNavbar() {\r\n  return (\r\n    <nav className=\"verticalNavbar\">\r\n      <div className=\"verticalNavbar_iconContainer\">\r\n        <img src={zenicon} alt=\"zen\" className=\"verticalNavbar_icon\"></img>\r\n        <img src={swimicon} alt=\"swim\" className=\"verticalNavbar_icon\"></img>\r\n        <img src={bikeicon} alt=\"bike\" className=\"verticalNavbar_icon\"></img>\r\n        <img src={weighticon} alt=\"muscle\" className=\"verticalNavbar_icon\"></img>\r\n      </div>\r\n      <p className=\"verticalNavbar_copyright\">Copyright, Sportsee 2020</p>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default VerticalNavbar;\r\n","import React from \"react\";\r\nimport HorizontalNavbar from \"./HorizontalNavbar\";\r\nimport VerticalNavbar from \"./VerticalNavbar\";\r\n\r\n/** Functionnal component rendering all navbars (Horizontal & Vertical)\r\n * \r\n * @returns React component\r\n */\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <HorizontalNavbar />\r\n      <VerticalNavbar />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/** Display greetings and the name of the actual user\r\n *\r\n * @param {string} props.userName The name of the actuel user\r\n * @returns JSX React component\r\n */\r\nexport default function Title(props) {\r\n  return (\r\n    <div className=\"dashboard_container\">\r\n      <h1 className=\"dashboard_title\">\r\n        Bonjour <span className=\"dashboard_title_name\">{props.userName}</span>{\" \"}\r\n      </h1>\r\n      <p className=\"dashboard_title dashboard_title_small\">\r\n        Félicitation ! Vous avez explosé vos objectifs hier 👏\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  userName: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/** Functionnal component displaying a card containing all information to display\r\n * @param {string} props.icon Icon path to display\r\n * @param {number} props.value Value to diplay coming from database\r\n * @param {string} props.unit Type of unit of the value\r\n * @param {string} props.category Categorie of the value to display\r\n * @returns JSX of a card\r\n */\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <img className=\"card_icon\" src={props.icon} alt={props.category} />\r\n      <div className=\"card_valueContainer\">\r\n        <p className=\"card_value\">{props.value + props.unit}</p>\r\n        <p className=\"card_value_type\">{props.category}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  icon: PropTypes.string,\r\n  value: PropTypes.number,\r\n  unit: PropTypes.string,\r\n  category: PropTypes.string,\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"./Card\";\r\nimport calorieIcon from \"../../../img/cards/calories-icon.svg\";\r\nimport proteinIcon from \"../../../img/cards/protein-icon.svg\";\r\nimport carbsIcon from \"../../../img/cards/carbs-icon.svg\";\r\nimport fatIcon from \"../../../img/cards/fat-icon.svg\";\r\n\r\n/** Arrays used to populate created cards with the Cards component\r\n */\r\nconst cardsIconsArray = [calorieIcon, proteinIcon, carbsIcon, fatIcon];\r\nconst unitsArray = [\"kCal\", \"g\", \"g\", \"g\"];\r\nconst categoriesArray = [\"Calories\", \"Proteines\", \"Glucides\", \"Lipides\"];\r\n\r\n/** Functionnal component rendering each card filled with food values.\r\n * @param {Object} props.keyData Informations to display\r\n * @property {Number} props.keyData.calorieCount Quantity of calories eaten\r\n * @property {Number} props.keyData.proteinCount Quantity of proteins eaten\r\n * @property {Number} props.keyData.carbohydrateCount Quantity of carbohydrates eaten\r\n * @property {Number} props.keyData.lipidCount Quantity of lipids eaten\r\n * @returns JSX React component\r\n */\r\nfunction Cards(props) {\r\n  return (\r\n    <div className=\"cards_container\">\r\n      {Object.values(props.keyData).map((value, index) => {\r\n        return (\r\n          <Card\r\n            key={categoriesArray[index] + index}\r\n            value={value}\r\n            icon={cardsIconsArray[index]}\r\n            unit={unitsArray[index]}\r\n            category={categoriesArray[index]}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nCards.proptype = {\r\n  keyData: PropTypes.object,\r\n};\r\n\r\nexport default Cards;\r\n","export default __webpack_public_path__ + \"static/media/calories-icon.3067c742.svg\";","export default __webpack_public_path__ + \"static/media/protein-icon.fcd07c7d.svg\";","export default __webpack_public_path__ + \"static/media/carbs-icon.a633f839.svg\";","export default __webpack_public_path__ + \"static/media/fat-icon.5f240256.svg\";","import Axios from \"axios\";\r\n\r\nAxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\n/** Get user and key datas in the database corresponding to the userId as an object.\r\n * @class\r\n * @param {number} userId Id of the user in the database\r\n * @returns {mainUserData} Object with user information and keyData\r\n * @property {Object} userInfos  Actual user information\r\n * @property {String} userInfos.firstName  Actual user firstname\r\n * @property {String} userInfos.lastName  Actual user lastname\r\n * @property {Number} userInfos.age  Actual user age\r\n * @property {Object} keyData  Actual user keydatas\r\n * @property {Number} keyData.calorieCount  Actual user calories\r\n * @property {Number} keyData.proteinCount  Actual user proteins\r\n * @property {Number} keyData.carbohydrateCount  Actual user carbohydrates\r\n * @property {Number} keyData.lipidCount  Actual user lipids\r\n * @property {Number} todayScore  Value of the objective score\r\n * @property {Number} score If todayScore is undefinned, the property name of the objective score is this one\r\n */\r\nexport default async function getUserDatas(userId) {\r\n  let errorValue = false;\r\n  const datasToReturn = await Axios.get(`/user/${userId}`).catch((err) => {\r\n    errorValue = true;\r\n  })\r\n  if (!errorValue) {\r\n    const { userInfos, keyData, todayScore, score } = datasToReturn.data.data;\r\n    return {\r\n      ...userInfos,\r\n      keyData,\r\n      todayScore,\r\n      score,\r\n      getResponse: true,\r\n      error: errorValue,\r\n    };\r\n  }\r\n  else {\r\n    return {\r\n      userName: \"\",\r\n      keyData: \"\",\r\n      todayScore:\"\",\r\n      getResponse: true,\r\n      error: true,\r\n    }\r\n  }\r\n}\r\n\r\n/** Get the user activity informations in the database corresponding to the userId\r\n *\r\n * @param {Number} userId\r\n * @returns {Array} an array of object\r\n * @property {String} object.day the date 'YYYY-MM-DD'\r\n * @property {Number} object.kilogram wieght of the person for the corresponding day\r\n * @property {Number} object.calories calories burnt for the corresponding day\r\n */\r\nexport async function getUserActivity(userId) {\r\n  const datasToReturn = await Axios.get(`/user/${userId}/activity`).catch(\r\n    (err) => {\r\n      console.log(err);\r\n    }\r\n  );\r\n  return datasToReturn.data.data.sessions;\r\n}\r\n\r\n/** Get the user average length of sessions in the database corresponding to the userId\r\n *\r\n * @param {Number} userId\r\n * @returns {Array} an array of object\r\n * @property {Number} object.day the position in the week (from 1 tp 7)\r\n * @property {Number} object.sessionLength length of the session in minute for the corresponding day\r\n */\r\nexport async function getUserAverageSessions(userId) {\r\n  const datasToReturn = await Axios.get(\r\n    `/user/${userId}/average-sessions`\r\n  ).catch((err) => {\r\n    console.log(err);\r\n  });\r\n  return datasToReturn.data.data.sessions;\r\n}\r\n\r\n/** Get the user performances value in the database corresponding to the userId\r\n *\r\n * @param {Number} userId\r\n * @returns {Array} array of objects\r\n * @property {Number} array.value the value to the corresponding category\r\n * @property {Number} array.kind the category of the performance value\r\n */\r\nexport async function getUserPerformance(userId) {\r\n  const datasToReturn = await Axios.get(`/user/${userId}/performance`).catch(\r\n    (err) => {\r\n      console.log(err);\r\n    }\r\n  );\r\n  const { data, kind } = datasToReturn.data.data;\r\n  const arrayToReturn = [];\r\n  data.forEach((el, index) => {\r\n    const firstLetterUpperKind =\r\n      kind[index + 1].charAt(0).toUpperCase() + kind[index + 1].slice(1);\r\n    let objectToPush = { value: el.value, kind: firstLetterUpperKind };\r\n    arrayToReturn[index] = objectToPush;\r\n  });\r\n  return arrayToReturn;\r\n}\r\n","import React from \"react\";\r\nimport { getUserActivity } from \"../../../callservice.js\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * @returns JSX React component of the tooltip\r\n */\r\nconst CustomToolTip = ({ active, payload }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"barchart_tooltip\">\r\n        <p>{`${payload[0].value}kg`}</p>\r\n        <p>{`${payload[1].value}kCal`}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n/** Class component of the barchart using Recharts.js. Display weight and burnt calories depending of the day of the week.\r\n * @param {Number} id the id of the actual user\r\n * @returns JSX React component\r\n */\r\nexport class Barchart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const userDatas = await getUserActivity(this.props.id);\r\n    this.setState({ data: userDatas });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2 className=\"barchart_title\">Activité quotidienne</h2>\r\n        <ResponsiveContainer className=\"barchart\" width=\"100%\" height=\"95%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={this.state.data}\r\n            margin={{\r\n              top: 0,\r\n              right: 30,\r\n              left: 40,\r\n              bottom: 50,\r\n            }}\r\n            barGap={8}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n            <XAxis dataKey=\"\" tickLine={false} dy={10} stroke=\"#9B9EAC\" />\r\n            <YAxis\r\n              orientation=\"right\"\r\n              dx={20}\r\n              tickLine={false}\r\n              axisLine={false}\r\n              tickCount={3}\r\n              stroke=\"#9B9EAC\"\r\n            />\r\n            <Tooltip content={<CustomToolTip />} />\r\n            <Legend\r\n              verticalAlign=\"top\"\r\n              align=\"right\"\r\n              iconType=\"circle\"\r\n              iconSize=\"10\"\r\n              height={50}\r\n            />\r\n            <Bar\r\n              name=\"Poids (kg)\"\r\n              dataKey=\"kilogram\"\r\n              fill=\"#282D30\"\r\n              barSize={7}\r\n              radius={[10, 10, 0, 0]}\r\n            />\r\n            <Bar\r\n              name=\"Calories brûlées (kCal)\"\r\n              dataKey=\"calories\"\r\n              fill=\"#E60000\"\r\n              barSize={7}\r\n              radius={[10, 10, 0, 0]}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nBarchart.propTypes = {\r\n  userName: PropTypes.number,\r\n};\r\n\r\nexport default Barchart;\r\n","import React from \"react\";\r\nimport { getUserAverageSessions } from \"../../../callservice.js\";\r\nimport { \r\n  LineChart, \r\n  Line, \r\n  ResponsiveContainer, \r\n  XAxis, \r\n  Tooltip \r\n} from \"recharts\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/** Values to display on the X Axis of the linechart.\r\n *\r\n */\r\nconst XAxisValue = [\"L\", \"M\", \"M\", \"J\", \"V\", \"S\", \"D\"];\r\n\r\n/**\r\n * @returns JSX React component of the tooltip\r\n */\r\nconst CustomTooltip = ({ payload, active }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <>\r\n        <div className=\"linechart_tooltip\">\r\n          <p>{payload[0].value}min</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n/** Class component of the linechart using Recharts.js. Display average session time for the week.\r\n * @param {Number} id the id of the actual user\r\n * @returns JSX React component\r\n */\r\nexport class Linechart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const userDatas = await getUserAverageSessions(this.props.id);\r\n    userDatas.forEach((el, index) => {\r\n      el.day = XAxisValue[index];\r\n    });\r\n    this.setState({ data: userDatas });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2 className=\"linechart_title\"> Durée moyenne des sessions</h2>\r\n        <ResponsiveContainer className=\"linechart\" width=\"32%\" height=\"100%\">\r\n          <LineChart\r\n            data={this.state.data}\r\n            margin={{\r\n              top: 50,\r\n              right: 0,\r\n              left: 0,\r\n              bottom: 20,\r\n            }}\r\n          >\r\n            <Tooltip\r\n              cursor={{ stroke: \"rgba(0, 0, 0, 0.1)\", strokeWidth: 1 }}\r\n              content={<CustomTooltip />}\r\n            />\r\n            <XAxis\r\n              dataKey=\"day\"\r\n              stroke=\"#FFFFFF80\"\r\n              axisLine={false}\r\n              tickLine={false}\r\n              padding={{ left: 15, right: 15 }}\r\n              tickMargin={15}\r\n            />\r\n            <Line\r\n              type=\"natural\"\r\n              dataKey=\"sessionLength\"\r\n              stroke=\"#FFFFFF80\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              activeDot={{ stroke: \"white\", strokeWidth: 2, r: 5 }}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nLineChart.propTypes = {\r\n  userName: PropTypes.number,\r\n};\r\n\r\nexport default Linechart;\r\n","import React from \"react\";\r\nimport { getUserPerformance } from \"../../../callservice.js\";\r\nimport {\r\n  Radar,\r\n  RadarChart,\r\n  PolarAngleAxis,\r\n  ResponsiveContainer,\r\n  PolarGrid,\r\n  PolarRadiusAxis,\r\n} from \"recharts\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/** Class component of the radarchart using Recharts.js. Display performance score for intensity, speed, strength, endurance, energy and cardio.\r\n * @param {Number} id the id of the actual user\r\n * @returns JSX React component\r\n */\r\nexport class Radarchart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const userDatas = await getUserPerformance(this.props.id);\r\n    this.setState({ data: userDatas });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer className=\"radarchart\" width=\"32%\" height=\"100%\">\r\n        <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"65%\" data={this.state.data}>\r\n          <PolarGrid />\r\n          <PolarAngleAxis\r\n            dataKey=\"kind\"\r\n            stroke=\"white\"\r\n            fontSize=\"10\"\r\n            tickLine={false}\r\n          />\r\n          <PolarRadiusAxis angle={0} domain={[0, 0]} stroke=\"#00000000\" />\r\n          <Radar\r\n            dataKey=\"value\"\r\n            stroke=\"#FF0101\"\r\n            fill=\"#FF0101\"\r\n            fillOpacity={0.6}\r\n          />\r\n        </RadarChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nRadarChart.propTypes = {\r\n  userName: PropTypes.number,\r\n};\r\n\r\nexport default Radarchart;\r\n","import React from \"react\";\r\nimport {\r\n  RadialBarChart,\r\n  RadialBar,\r\n  PolarAngleAxis,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n/** Class component of the radialBarchart using Recharts.js. Display the actual completion of the objective.\r\n * @param {Number} todayScore the objective completion of the day from 0 (0%) to 1 (100%)\r\n * @returns JSX React component\r\n */\r\nexport class RadialBarchart extends React.Component {\r\n  render() {\r\n    const dataPercentage = [\r\n      { todayScore: this.props.todayScore, fill: \"#E60000\" },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <h2 className=\"radialBarchart_title\">Score</h2>\r\n        <p className=\"radialBarchart_text\">\r\n          {dataPercentage[0].todayScore * 100}% <br></br>\r\n          <span className=\"radialBarchart_text_small\">de votre objectif</span>\r\n        </p>\r\n        <ResponsiveContainer\r\n          className=\"radialBarchart\"\r\n          width=\"32%\"\r\n          height=\"100%\"\r\n        >\r\n          <RadialBarChart\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            innerRadius=\"80%\"\r\n            outerRadius=\"90%\"\r\n            barSize={20}\r\n            data={dataPercentage}\r\n            startAngle={90}\r\n            endAngle={450}\r\n          >\r\n            <PolarAngleAxis\r\n              type=\"number\"\r\n              domain={[0, 1]}\r\n              tick={false}\r\n              background\r\n            />\r\n            <LabelList dataKey=\"Test\" />\r\n            <RadialBar\r\n              dataKey=\"todayScore\"\r\n              stroke=\"red\"\r\n              fill=\"red\"\r\n              cornerRadius={10}\r\n            />\r\n            <Legend\r\n              align=\"left\"\r\n              verticalAlign=\"top\"\r\n              iconSize=\"0\"\r\n              fill=\"#ffffff\"\r\n            />\r\n          </RadialBarChart>\r\n        </ResponsiveContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRadialBarchart.propTypes = {\r\n  userName: PropTypes.number,\r\n};\r\n\r\nexport default RadialBarchart;\r\n","import React from \"react\";\r\n\r\n/** Display error message\r\n *\r\n * @returns JSX React component\r\n */\r\nexport default function ErrorMessage() {\r\n  return (\r\n    <section className=\"dashboard\">\r\n    <div className=\"dashboard_container\">\r\n      <p className=\"dashboard_title\">\r\n        Erreur lors du chargement de la page, veuillez réessayer.\r\n      </p>\r\n    </div>\r\n  </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Title from \"./Title\";\r\nimport Cards from \"./cards/Cards\";\r\nimport Barchart from \"./chart/Barchart\";\r\nimport Linechart from \"./chart/Linechart\";\r\nimport Radarchart from \"./chart/Radarchart\";\r\nimport RadialBarchart from \"./chart/RadialBarchart\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport getUserDatas from \"../../callservice\";\r\n\r\n/** Class component of the dashboard, render React component include in the dashboard.\r\n *\r\n * @returns JSX React component\r\n */\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      userName: \"\",\r\n      keyData: \"\",\r\n      todayScore: \"\",\r\n      getResponse: false,\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  /** Getting information in the database, stocking it in this.state and passing it to the displayed components.\r\n   * If userDatas.todayScore is undefined, it take the value of the score value (backend property typo error)\r\n   */\r\n  async componentDidMount() {\r\n    const userDatas = await getUserDatas(this.state.id);\r\n    this.setState({\r\n      userName: userDatas.firstName,\r\n      keyData: userDatas.keyData,\r\n      todayScore:\r\n        userDatas.todayScore === undefined\r\n          ? userDatas.score\r\n          : userDatas.todayScore,\r\n      getResponse: userDatas.getResponse,\r\n      error: userDatas.error,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return !this.state.getResponse ? (\r\n      <ErrorMessage />\r\n    ) : this.state.error ? (\r\n      <ErrorMessage />\r\n    ) : (\r\n      <section className=\"dashboard\">\r\n        <Title userName={this.state.userName} />\r\n        <Cards keyData={this.state.keyData} />\r\n        <div className=\"dashboard_barchartContainer\">\r\n          <Barchart id={this.state.id} />\r\n        </div>\r\n        <div className=\"dashboard_bottomChartsContainer\">\r\n          <Linechart id={this.state.id} />\r\n          <Radarchart id={this.state.id} />\r\n          <RadialBarchart todayScore={this.state.todayScore} />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport Nav from \"./components/navbar/Nav\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport \"./styles/App.scss\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n/** Nav and dashboard rendering. Routing to switch the id in the url (actually 12 and 18), page init with id=12.\r\n *\r\n * @returns React components\r\n */\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n\r\n      <Switch>\r\n        <Route path=\"/:id\" exact component={Dashboard} />\r\n        <Route path=\"/\" exact>\r\n          <Redirect to=\"/12\" />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}